#define colorRGB    vec3
#define colorRGBA    vec4
vec4 myEffect0(in vec2 fragCoord)
{
    //return vec4(1.0, 0.0, 0.0, 1.0);

    //R -> horiz
    //G -> vert
    //B?
    //A?

    //return vec4(fragCoord, 0.0, 1.0);


    //final : red-green gradient

    vec2 uv = fragCoord / iResolution.xy;

  	vec3 color = vec3(uv, 0.25);

    float myArray[6];
    float[6](1.0, 2.0, 3.0, 42.0, 9001.0, -2.0);
    myArray[0] = 1.0;

    color[0] = 1.0; //color.x = 1.0;
    color.r = 1.0;

    return vec4(uv, 0.0, 1.0);
}

void mainImage( out vec4 fragColor, in vec2 fragCoord )
{
    //R, G, B, A, => [0, 1]


    fragColor = myEffect0(fragCoord);

    //fragColor = vec4(1.0, 1.0, 1.0 ,1.0);


     //Normalized pixel coordinates (from 0 to 1)
    vec2 uv = fragCoord/iResolution.xy;

     //Time varying pixel color
    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));

    //Output to screen
    //fragColor = vec4(col,1.0);
}